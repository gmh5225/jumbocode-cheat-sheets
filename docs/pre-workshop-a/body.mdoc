Hey! Before Workshop A, there are four things that it'd be great if you could do. It shouldn't take longer than 30 minutes —&nbsp;in fact, if it does, ping Ben Borgers on Slack and we can get it sorted out. (Also, if you have any questions at all throughout this, send me a message!)

## Sign up for GitHub

{% callout %}
**First — what are Git and GitHub?**

The world today builds software using a tool called Git. It's a tool for *version control*, which means that it manages different versions of your code. It maintains the full history of your changes, and you can go back to prior versions at any time. You can also "branch" the folder of code and build your changes while a teammate makes their own changes, without you working on top of one another, and then eventually "merge" each of your branches back into the main codebase.

There's a subtle difference between Git and GitHub: Git is the version control tool, and by itself keeps track of your history on your computer. But if you want to work with other people, GitHub allows you to "push" your local changes to a central spot, so your team can access your changes. So the history of the codebase is on your computer (managed by Git), where you can work with it, and in the cloud (on GitHub's servers) so that everyone has the same changes.
{% /callout %}

You can sign up for an account at [github.com](https://github.com), if you don't already have one! (You don't need a separate account for JumboCode.)

## Install Git

Git, the version control software we talked about above, comes *somewhat* preinstalled on Macs. You'll want to run this command to get it fully installed:

```bash
git --version
```

If you're using Windows, you can follow [these instructions on how to install Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git).
